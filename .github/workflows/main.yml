name: Build & Deploy microServiceCICDTest 

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    name: Build and deploy microServiceCICDTest
    runs-on: ubuntu-latest

    steps:
      # 1️. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3️. Build Docker images for app1 and app2 (lowercase names)
      - name: Build Docker images
        run: |
          docker build -t microservicecicdtest_app1:latest ./app1
          docker build -t microservicecicdtest_app2:latest ./app2

      # 4️. Create Docker network (if not exists)
      - name: Create Docker network
        run: |
          docker network inspect app-network || docker network create app-network

      # 5️. Run containers using Docker Compose (network defined in docker-compose.yml)
      - name: Run containers for testing
        run: |
          docker-compose up -d

      # 6️. Inspect Docker network (debugging)
      - name: Inspect Docker Network
        run: |
          echo "Docker Network Details:"
          docker network inspect app-network

      # 7️. Check Docker container logs (for errors)
      - name: Check Docker container logs
        run: |
          echo "App1 logs:"
          docker logs app1 || true
          echo "App2 logs:"
          docker logs app2 || true

      # 8️. Test if the containers are running (health checks)
      - name: Test application endpoints
        run: |
          sleep 30  # Give containers enough time to start
          echo "Checking App1 health..."
          curl --fail http://app1:5004/health || exit 1
          echo "Checking App2 health..."
          curl --fail http://app2:5005/health || exit 1

      # 9️. Stop and clean up containers after testing
      - name: Stop and remove containers
        run: |
          docker-compose down
