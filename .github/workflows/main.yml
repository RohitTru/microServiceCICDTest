name: Build & Deploy Feature Apps

on:
  push:
    branches:
      - "feature-*"
  delete:
    branches:
      - "feature-*"

jobs:
  build-feature-app:
    name: Build & Deploy Feature App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          clean: true  # Ensure a clean working directory

      - name: Ensure Docker Network Exists
        run: |
          if ! docker network inspect app-network > /dev/null 2>&1; then
            docker network create --driver bridge app-network
          fi

      - name: Extract Branch Name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Create App Folder and .env
        run: |
          mkdir -p "${{ env.BRANCH_NAME }}"
          rsync -av --exclude 'microservice-env-template.env' ./app-template/ ./${{ env.BRANCH_NAME }}/

          cat <<EOF > ./${{ env.BRANCH_NAME }}/.env
          APP_NAME=${{ env.BRANCH_NAME }}
          APP_IMAGE=rohittru/microservicecicdtest_${{ env.BRANCH_NAME }}:latest
          APP_PORT=$((5000 + RANDOM % 1000))
          REDIS_HOST=redis
          EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t rohittru/microservicecicdtest_${{ env.BRANCH_NAME }}:latest \
          --build-arg BUILD_TIMESTAMP=$(date +'%Y%m%d%H%M%S') ./${{ env.BRANCH_NAME }}
          docker push rohittru/microservicecicdtest_${{ env.BRANCH_NAME }}:latest

      - name: Clean Up Workspace After Build
        run: |
          echo "Cleaning up temporary files..."
          rm -rf "./${{ env.BRANCH_NAME }}" || true
          rm -rf "./master" || true

  cleanup:
    if: github.event_name == 'delete'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          clean: true  # Ensure a clean working directory

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Branch Name
        run: echo "BRANCH_NAME=${{ github.event.ref }}" >> $GITHUB_ENV

      - name: Remove Docker Resources
        run: |
          echo "Cleaning up Docker resources for ${{ env.BRANCH_NAME }}..."
          docker rm -f ${{ env.BRANCH_NAME }} || true
          docker rmi rohittru/microservicecicdtest_${{ env.BRANCH_NAME }}:latest || true

          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST \
            -d '{"username": "${{ secrets.DOCKER_HUB_USERNAME }}", "password": "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)

          if [ -n "$TOKEN" ]; then
            curl -s -X DELETE \
              -H "Authorization: Bearer $TOKEN" \
              "https://hub.docker.com/v2/repositories/rohittru/microservicecicdtest_${{ env.BRANCH_NAME }}/"
          fi

      - name: Clean Up Workspace After Deletion
        run: |
          echo "Cleaning up workspace..."
          rm -rf "./${{ env.BRANCH_NAME }}" || true
          rm -rf "./master" || true

      - name: Remove Docker Network (if unused)
        run: |
          if [ -z "$(docker ps -q -f network=app-network)" ]; then
            docker network rm app-network || true
          fi
