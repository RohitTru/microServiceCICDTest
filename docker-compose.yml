version: '3.8'

networks:
  app-network:
    driver: bridge
    name: app-network
    external: true

services:
  # Redis Service
  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Application Service
  app:
    image: "${APP_IMAGE:-rohittru/microservicecicdtest_default:latest}"
    pull_policy: always
    container_name: "${APP_NAME:-default-app}"
    restart: always
    env_file:
      - "./${APP_NAME}/.env"
    ports:
      - "${APP_PORT:-5004}:${APP_PORT:-5004}"
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=${VIRTUAL_PORT}
      - ENABLE_SSL=${ENABLE_SSL:-false}
    depends_on:
      - redis
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT:-5004}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Proxy Service
  nginx:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
      - ./certs:/etc/ssl/certs:ro
      - ./nginx-entrypoint.sh:/docker-entrypoint.d/nginx-entrypoint.sh:ro
    environment:
      - DEFAULT_HOST=default.emerginary.com
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=${VIRTUAL_PORT}
      - ENABLE_SSL=${ENABLE_SSL}
    entrypoint: ["/docker-entrypoint.d/nginx-entrypoint.sh", "nginx", "-g", "daemon off;"]
    networks:
      - app-network
