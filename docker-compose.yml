version: '3.8'

networks:
  app-network:
    driver: bridge
    name: app-network
    external: true

services:
  # Redis Service (Shared)
  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Application Service (Dynamic)
  app:
    image: "${APP_IMAGE:-rohittru/microservicecicdtest_default:latest}"
    container_name: "${APP_NAME:-default-app}"
    restart: always
    env_file:
      - "./${APP_NAME}/.env"
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=${APP_PORT}
      - ENABLE_SSL=${ENABLE_SSL:-false}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${APP_NAME}.rule=Host(`${VIRTUAL_HOST}`)"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=${APP_PORT}"
    depends_on:
      - redis
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Proxy (Automated Reverse Proxy)
  nginx:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro  # Automatic discovery
      - ./certs:/etc/ssl/certs:ro
    environment:
      - DEFAULT_HOST=default.emerginary.com
    networks:
      - app-network
