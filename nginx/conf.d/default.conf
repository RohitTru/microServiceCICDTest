# Define a shared memory zone for rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

server {
    listen 80;
    server_name ${VIRTUAL_HOST};

    # Redirect to HTTPS if SSL is enabled
    if ($http_x_forwarded_proto = 'https') {
        return 301 https://$host$request_uri;
    }

    # Log requests (optional)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Main app route
    location / {
        proxy_pass http://${VIRTUAL_HOST}:${VIRTUAL_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://${VIRTUAL_HOST}:${VIRTUAL_PORT}/health;
    }

    # Rate-limited API endpoint
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://${VIRTUAL_HOST}:${VIRTUAL_PORT}/api/;
    }
}

# Optional SSL Block (Disabled by Default)
# Uncomment when SSL is ready
# server {
#     listen 443 ssl;
#     server_name ${VIRTUAL_HOST};
#
#     ssl_certificate /etc/ssl/certs/${VIRTUAL_HOST}.crt;
#     ssl_certificate_key /etc/ssl/certs/${VIRTUAL_HOST}.key;
#
#     location / {
#         proxy_pass http://${VIRTUAL_HOST}:${VIRTUAL_PORT};
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }
